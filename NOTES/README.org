#+author: Rodrigo Francisco
#+date: <2021-09-03 Fri>

* Temario

1. LINUX redhat-centos ()
   + Instalación de sistema operativo linux
   + Crear usuarios/grupos
   + Crear particiones y montaje de volumenes (lvm)
   + Configurar permisos (usuario/grupo) y permisos en directorios y archivos
   + Instalación de paquetes y repositorios, crear cuenta en redhat
   + Configuración de redes (linea de comandos)
   + Hardening de servidores (politicas de contraseñas, administración de sesiones)
   + Administración de firewalld
   + Selinux
2. Virtualización
   + ¿Qué es la virtualización?
   + Diferencia entre máquinas virtuales y servidores físicos
   + Hypervisor
   + Switches virtuales (standard y distribuidos)
   + Almacenamiento compartido (fiber channel, iscsi, nfs)
   + Configuración de cluster de virtualización
   + DRS  ( distributed resource schedule)
   + DPM ( distributed power management)
   + HA (high availability)
   + Contenedores en vmware
   + Contenedores
3. Instalación de contenedores (dockers) en linux
   + Creación de contenedores
   + Configuración de red virtual para contenedores
   + Configuración de volumenes logicos
   + Kubernetes (practica con vmware y crear un cluster con kubernetes)
4. Kubernetes
   + Componentes de contenedores
   + Creación de cluster de contenedores
   + Administración básica de contenedores.
   + Creación de microservicios

* Semana 01

** Introducción a Linux
*** Particiones

- MBR: /Master Boot Reload/. Tabla que contiene los apuntadores de la particiones de nuestro disco. Podemos tener los siguientes tipos de particiones
  + 4 primarias
  + En realidad: 3 primarias y 1 extendida.
  + La partición /extendida/ puede crecer de la partición 5 a la 15.
  + En Linux se recomienda usar particiones primarias.
    [[./README.assets/mbr.png]]
- GPT: Tabla de particiones _al inicio y al final_ del disco. No hay limite de particiones y podemos usar discos mayores a 2 TB.
- Swap: También conocida como memoria de intercambio. Es una memoria virtual creada en disco, que sirve como soporte a la memoria RAM

*** Directorios

- /: El directorio principal
- bin: Binarios del usuario
- sbin: Binarios del sistema
- boot: Imágenes de arranque
- home
- etc: Archivos de configuración, tanto del sistema como de servicios y aplicaciones
- proc: Información de los procesos
- opt: Programas no nativos
- sys: Archivos virtuales para extraer información en tiempo real
- dev: Información de los dispositivos y vólumenes
- tmp: Archivos temporales
- usr: Archivos de los programas creados por los usuarios
- var: Variables, logs
- lib: Librerías del sistema

*** Configuración de la red

#+begin_src sh
hostnamectl set-hostname tsic2.ezmeral.hpe.com

# Configurando la red
nmcli
nmcli device show
nmcli connection show
nmcli connection --help
nmcli connection modify --help
nmcli connection modify ens192 ipv4.method manual ipv4.addr "172.16.51.199"
nmcli connection show
nmcli connection show --active
nmcli connection up ens192
nmcli connection show --active
ip addr

nmcli connection modify ens192 ipv4.gw4 172.16.51.129

nmcli connection down ens192
nmcli connection up ens192

# Configurando el DNS
vi /etc/resolv.conf
nameserver 8.8.8.8
#+end_src

* Semana 02

** Permisos y manejo de usuarios en Linux

#+begin_src shell
ls -l
#+end_src

#+RESULTS:
| total      | 364 |          |          |        |     |    |       |                                |
| drwxr-xr-x |   2 | rhodstar | rhodstar |   4096 | Sep | 29 | 19:03 | README.assets                  |
| -rwxr--r-- |   1 | rhodstar | rhodstar |   5533 | Sep | 29 | 19:05 | README.org                     |
| drwxr-xr-x |   2 | rhodstar | rhodstar |   4096 | Sep | 15 | 19:43 | t02                            |
| -rw-r--r-- |   1 | rhodstar | rhodstar |   3203 | Sep | 14 | 13:29 | TSIC2-tarea01-BIOS-vs-UEFI.org |
| -rw-r--r-- |   1 | rhodstar | rhodstar |  93755 | Sep |  9 | 22:52 | TSIC2-tarea01-BIOS-vs-UEFI.pdf |
| -rw-r--r-- |   1 | rhodstar | rhodstar |   6693 | Sep | 15 | 19:53 | TSIC2-tarea02-shells.org       |
| -rw-r--r-- |   1 | rhodstar | rhodstar | 235915 | Sep | 15 | 20:00 | TSIC2-tarea02-shells.pdf       |
| -rw-r--r-- |   1 | rhodstar | rhodstar |   8748 | Sep | 15 | 20:00 | TSIC2-tarea02-shells.tex       |

- r = 2^2 = 4
- w = 2^1 = 2
- x = 2^0 = 1

Entonces
- rwx = 7
- rw = 5
- r = 4

#+begin_src shell
useradd rodrigo # Crea el usuario con su directorio

cd /home/rodrigo
ls -ld /home/rodrigo
touch test01
ls -l /home/rodrigo/test01 # Permisos de lectura por defecto para grupo y otros
mkdir Test01
ls -ld Test01 # Permisos de ejecucion para grupo y otros
#+end_src

Para los /archivos/ los permisos por defecto son  /644/ y para /directorio/ son  /777/

- Archivo
  + Permisos por default: 666
  + *umask*: 644
- Directorio
  + Permiso por defecto: 777
  + *umask*: 755

#+begin_src shell
umask # Deber regresar 022

umask 111
touch test02
ls -l test02 # Mascara: 666

umask 0077
touch test03
ls -l test03 # Mascara 600
mkdir Test03
ls -ld Test03 # 700
#+end_src

Creación de usuarios

#+begin_src shell
sudo su rodrigo
id

cat /etc/passwd
useradd -u 1010 -c "usuario prueba" fulanito
cat /etc/passwd

cat /etc/group
#+end_src

Usuarios y grupos

#+begin_src shell
groupadd --help
groupadd -g 1100 seguridad
cat /etc/group
useradd -u 1101 -g 1100 policia01
useradd -u 1102 -g seguridad policia02

usermod -g 1100 fulanito # Fulanito ahora es parte del gpo seguridad
usermod -G 1100 rodrigo # rodrigo, se encuentra como parte del segurida en /etc/group

groupadd -g 1200 administrator
usermod -G 1200,1100 rodrigo
#+end_src

#+begin_src shell
passwd policia03
su - policia03
touch Test01
ls -l # 644
chmod 646 Test01 # Cambiando permisos
ls -l #646

chmod 700 Test01
ls -l Test01
chmod g+rw Test01
#+end_src

#+begin_src shell
groupadd -g 2000 finanzas
useradd -g 2000 -u 2001 contador01
useradd -g 2000 -u 2002 contador02
useradd -g 2000 -u 2003 contador03

mkdir /finanzas /seguridad
ls -ld /finanzas /seguridad
chgrp seguridad /seguridad
umask 0022
chmod 770 /seguridad

su - contador01
cd /seguridad # No nos debería dejar

su - policia01
touch 01
cat 01
exit
su -l policia02
cat 01
vi 01 # Brecha de seguridad
#+end_src

** LVM (Logical Volume Manager)

Con LVM podemos hacer particiones apartir de varios discos

[[./README.assets/lvm.jpeg]]

#+BEGIN_SRC shell
lsblk

parted
partprobe
lsblk

pvcreate /dev/sda4
vgcreate VG_TS /dev/sda4
pvs
vgs

lvcreate -L 1G -n lv_cap01 VG_TS
mkfs.ext3 /dev/VG_TS/lv_cap01
lvs

# Mounting
mkdir /cap01
mount /dev/VG_TS/lv_cap01 /cap01

df -h
lsblk
#+END_SRC

* Semana 04

** Suscripciones para RHEL

Suscripciones
- 1 suscripción de SO
  + Paquetes de SO, paquetes extras
- 1 suscripción de virtualización
  + Paquetes de virtualización
  + Paquetes de SO, extra
- 1 sucripción para contenedores
  + Contenedores virtuales, SO, extra, etc.

Gestores de paquetes
- yum
- dnf
- rpm

[[https://access.redhat.com/sites/default/files/attachments/rh_sm_command_cheatsheet_1214_jcs_print.pdf][Manual para =subscription manager= ]]

#+begin_src shell
yum list
yum repolist # Hasta este momento no tenemos nada

subscription-manager register # Nos pedira las credenciales
subscription-manager list --available
subscription-manager attach --pool=#Completar-con-id
subscription-manager repos --list
subscription-manager repos --enable=rhel-8-for-x86_64-baseos-rpms
subscription-manager repos --list | grep Stream
subscription-manager repos --list | grep -B1 Stream
subscription-manager repos --enable=rhel-8-for-x86_64-appstream-rpms

dnf repolist

dnf install zsh
dnf install wget
#+end_src

** Instalaciones de paquetes sin Internet (Usando el disco de instalación)

#+begin_src shell
mount /dev/cdroom /mnt
vi /etc/yum.repos.d/repos.repo
#+end_src

Escribir lo siguiente:

#+begin_src shell
[AppStream]
name=AppStream
baseurl=file:///mnt/AppStream
enable=1
gpgcheck=0

[Baseos]
name=BaseOS
baseurl=file:///mnt/BaseOS
enable=1
gpgcheck=0
#+end_src

#+RESULTS:

#+begin_src shell
yum repolist # Ahora deberíamos ver 4 repositorios
#+end_src

Al final no vamos a instalar nada con el disco por lo que al final eliminaremos el archivo.

** Usando paquetes =rpm=

#+begin_src shell
dnf search yum
dnf install yum-utils
dnf search dns
dnf search ntp

yumdownloader ntpstat
rpm -ivh ntpstat-0.5-2.el8.noarch.rpm
# No nos dejara por las dependencias
yumdownloader chrony
rpm -ivh chrony-3.5-2.el8.x86_64.rpm
# Ahora sí ya podremos instalar ntpstat
#+end_src

** Firewall-cmd

Es la evolución de /IP tables/

#+begin_src shell
systemctl status firewalld

firewall-cmd --help
firewall-cmd --get-default-zone

firewall-cmd --list-all
firewall-cmd --list-all-zones

firewall-cmd --permanent --set-target=DROP
firewall-cmd --add-icmp-block-inversion --permanent
# Despues de agregar una regla
firewall-cmd --reload
#+end_src

Las zonas sirven para categorizar las interfaces, fuentes, servicios, protocolos, etc.

#+begin_src shell
firewall-cmd --permanent --zone block --add-source=172.16.51.199
firewall-cmd --reload
# Primero revisa el log
firewall-cmd --permanent --zone block --remove-source=172.16.51.199
firewall-cmd --reload
#+end_src

Zonas:
- DROP: Manda una alerta
- BLOCK: No manda alerta, solo no lo deja pasar

Vemos los logs del sistema

#+begin_src shell
tail -f /var/log/messages
tail -f /var/log/secure
tail -f /var/log/firewalld
#+end_src

* Semana 05

Examen: 15 de Octubre de 2014

** Hardering de servidores ( Políticas de contraseñas, administración de sesiones )

Los servidores deben de cumplir con ciertas políticas de contraseñas para tener mayor seguridad. Existen 2 ISOS:

- ISO27000
- ISO27001
- ISO27017: AWS, Google Cloud, On premise.

Políticas de contraseñas

| Política                                                 |   Valor |
|----------------------------------------------------------+---------|
| Mayúsculas                                               |       1 |
| Números                                                  |       1 |
| Caracteres especiales                                    |       1 |
| Longitud                                                 |      12 |
| Minúsculas                                               |       1 |
| Cadenas conocidas (123, abc, 321, qwerty)                |       3 |
| Diccionario conocido (usuario, nombre, correo, apellido) |         |
| No repetir historial                                     |       5 |
| Caducidad                                                | 90 días |
| No repetir cadenas                                       |       3 |

[[./README.assets/time-crack.png]]

[[./README.assets/pass.png]]

#+begin_src shell
cat /etc/security/pwquality.conf
#+end_src

#+begin_src shell
difok = 3
minlen = 12
dcredit = 1
ucredit = 1
lcredit = 1
ocredit = 1
minclass = 1
maxrepeat = 3
maxclassrepeat = 0
gecoscheck = 0
dictcheck = 1
usercheck = 1
usersubstr = 0
enforcing = 1
dictpath = /root/dicc
retry = 3
#+end_src

Contraseñas:
- policia01: hola123

/pam_pwquality/

#+begin_src shell
cat /etc/pam.d/system-auth
#+end_src

** Manejo de sesiones

| Política                   | Valor |
|----------------------------+-------|
| Inactividad                |  600s |
| Intentos de conexión       |     3 |
| Bloqueo de la sesión       |  300s |
| Intentos fallidos          |     5 |
| Número de sesiones activas |     5 |

#+begin_src shell
vi /etc/login.defs
#+end_src

#+begin_src shell
PASS_MAX_DAYS 90
PASS_MIN_DAS 0
PASS_MIN_LEN 12
PASS_WARN_AGE 7
#+end_src

#+begin_src shell
vi /etc/ssh/sshd_config
#+end_src

#+begin_src shell
LoginGraceTime 30
PermitRootLogin yes
MaxAuthTries 3
MaxSessions 2

Banner /root/banner
#+end_src

#+begin_src shell
vi /root/banner
#+end_src

#+begin_src shell
Esto sistema es privado y utilizado para fines de la empresa.
Cualquier conexión al servidor permite ser monitoreada las actividades
El sistema solo tiene permitido acceder a usuarios que pertenecen a la empresa
#+end_src

* Semana 06
** SELinux

Es una capa extra de seguridad

#+begin_src shell
ls -lZ /boot
ls -lZ /
#+end_src

Si un archivo no tiene contexto, el servicio no levanta o se queda pasmado

#+begin_src shell
cat /etc/sysconfig/selinux

getenforce

setenforce permissive
#+end_src

- *Enforcing*: Si algún servicio o directorio no tiene el contexto adecuado, no arranca el servicio.
- *Permissive*: Se pueden tener el servicio levantando pero con muchos warnings de que se debe hacer la configuración correcta.

#+begin_src shell
dnf whatprovides semanage
dnf install policycoreutils-python-utils
dnf whatprovides seinfo
dnf install setools-console
dnf whatprovides sealert
dnf install setroubleshoot-server
#+end_src

Hay 3 tipos de contextos:

Contextos del sistema
#+begin_src shell
seinfo -u
#+end_src

Roles del sistema
#+begin_src shell
seinfo -r
#+end_src

#+begin_src shell
seinfo -t
seinfo | grep http
#+end_src

*** Ejemplo

#+begin_src shell
dnf install httpd

vi /etc/httpd/conf/httpd.conf
# Cambiar a puerto 82

systemctl restart httpd
journal -xe
semanage port -a -t http_port_t -p tcp 82
systemctl restart httpd
#+end_src

#+begin_src shell
semanage port -l
#+end_src

#+begin_src shell
sealert -l*
#+end_src

** Virtualización

La virtualización nos permite correr máquinas virtuales. Utilizando equipos con 1 o 2 TB de RAM, y procesadores platinum con 64 cores.

Los equipos (se les conoce como /hipervisores/) tienen que tener un almacenamiento externo para las máquinas virtuales.

[[./README.assets/virtual.png]]

Hipervisor de VMWare: ESXI

[[./README.assets/virtual02.png]]

Las máquinas virtuales están aisladas.
Las máquinas virtuales estan encapsuladas, cada máquina virtual tiene sus propios archivos de configuración

/vMotion/, es la capacidad de mover la máquinas virtuales de un servidor a otro.

[[./README.assets/vmotion.png]]

Comparación entre equipos físicos y virtuales

[[./README.assets/time.png]]

Discos virtuales:

- Thick: Disco de 20GB que nadie más va a poder utilizar
- Thin: Disco de 40GB, que se pueden utilizar bajo demanda.

[[./README.assets/discos.png]]

*Notas de examen:*
- Es totalmente práctico, debemos sacar screenshots.
- Generar máquina virtual con redhat 8 (0.5 la sola entrega de la MV)
  + SDA 40GB (0.5)
  + / 10 GB
  + /boot 1GB
  + /efi 600M
  + /home 5GB
  + /var 5GB
- Configuración de red para tener salida a internet (0.25)

*** Storage en virtualización

ISCSI
[[./README.assets/storage.png]]

NFS:
Compartimos un sistema de archivos, se comparte con los hipervisores.

* Semana 09
** Contenedores

[[./README.assets/containers.png]]

[[./README.assets/docker.png]]

Historia de la separación entre las plataformas

[[./README.assets/history.png]]

* Semana 10
** Docker

#+begin_src shell
mkdir /podman-httpd
cd /podman-httpd
vi Dockerfile
yum install httpd
podman build -t my-apache .
podman images
podman run -dit --name my-running-app -p 8080:80 my-apache
podman ps
curl localhost:8080
podman inspect 782559ad620e | grep -i IPAddress
#+end_src

#+begin_src shell
podman stop <container>
podman rm <container>

podman pull mariadb:latest
podman image
podman run --detach --name some-mariadb --env MARIADB_USER=example-user --env MARIADB_PASSWORD=my_cool_secret --env MARIADB_ROOT_PASSWORD=my-secret-pw  mariadb:latest

podman ps

podman run -it --rm mariadb mysql -h <server container IP> -u example-user -p
podman exec -it some-mariadb bash

podman inspect <ID> | grep -i IPaddress
#+end_src

Ejemplo Dockerfile
#+begin_src shell
FROM registry.access.redhat.com/rhel
WORKDIR /opt
RUN yum -y install python3
ENTRYPOINT /usr/bin/python3 -m http.server 8000
#+end_src
